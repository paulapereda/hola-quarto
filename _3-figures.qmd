---
editor: 
  markdown: 
    wrap: sentence
---

# Gr치ficos limpios {.title-middle-ice background-image="images/horst_quarto_penguins_teach.png" aria-label="Two penguins in a room made of ice, looking out a window. One penguin is holding an icicle as a pointer, pointing at a Quarto logo moon in the sky, while the other penguin looks on."}

## Controla el tama침o de tu gr치fico {#graph-size}

-   Quarto permite especificar el tama침o de los gr치ficos directamente dentro de los par치metros del fragmento de c칩digo.

-   Se puede controlar tanto el ancho como el alto de una figura usando las opciones fig.width y fig.height.
    Estas dimensiones se especifican en pulgadas.

```{r}
#| echo: fenced
#| eval: false
#| fig-width: 3
#| fig-height: 3
# Code for a square chart, 3x3 inches
```

-   En la web, normalmente tenemos 96 p칤xeles por pulgada (PPI).
    Y por defecto, un documento Quarto se renderiza con un ancho de 900 p칤xeles.

-   Por lo tanto, si el gr치fico tiene una anchura de 9 pulgadas, ocupar치 toda la anchura de la p치gina.

## Controla el tama침o de tu gr치fico {#graph-size-2}

Por favor, consulte los siguientes ejemplos para una mejor comprensi칩n:

```{r}
#| echo: false
library(tidyverse)
data <- datos::pinguinos 
source("funciones.R")
```

::: panel-tabset
### Ancho = 3

```{r}
#| echo: false
#| fig-width: 3
#| fig-height: 3
crear_scatterplot(data, "Adelia", "Torgersen")
```

### Ancho = 6

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 6
crear_scatterplot(data, "Adelia", "Torgersen")
```

### Ancho = 9

```{r}
#| echo: false
#| fig-width: 7.5
#| fig-height: 7.5
crear_scatterplot(data, "Adelia", "Torgersen")
```
:::

## Responsividad {#responsiveness-1}

-   La capacidad de respuesta en el dise침o web significa que su contenido, incluidas las figuras, se **ajusta al tama침o de la pantalla** del dispositivo en el que se est치 visualizando.
    Esto es **crucial** para mantener una experiencia f치cil de usar.

-   Creanme, habr치 gente leyendo el reporte en su tel칠fono.

-   Quarto se destaca en la creaci칩n de figuras responsivas **autom치ticamente** 游꿀.
    Si el tama침o especificado en pulgadas **excede el ancho de la pantalla**, Quarto inteligentemente **redimensionar치 la figura** para ajustarse al ancho completo de la pantalla mientras **mantiene la relaci칩n de aspecto original**.

## Responsividad

-   La figura tiene un ancho de 8 pulgadas. Al disminuir la anchura de la pantalla, se ajusta autom치ticamente para ocupar el 100% de la anchura disponible.

![](images/3-teach/responsive_fig.gif){fig-align="center" fig-alt="Responsiveness."}

## Alineaci칩n de figuras {.fig-align}

Las distintas preferencias de alineaci칩n de las figuras, como izquierda, centro o derecha, pueden gestionarse f치cilmente en Quarto mediante los par치metros chunk `fig.align = 'left'`, `fig.align = 'center'`, or `fig.align = 'right'`, respectivamente.

::: panel-tabset
### Izquierda

```{r}
#| echo: false
#| fig-width: 5
#| fig-height: 5
#| fig-align: "left"
crear_scatterplot(data, "Adelia", "Torgersen")
```

### Centro

```{r}
#| echo: false
#| fig-width: 5
#| fig-height: 5
#| fig-align: "center"
crear_scatterplot(data, "Adelia", "Torgersen")
```

### Derecha

```{r}
#| echo: false
#| fig-width: 5
#| fig-height: 5
#| fig-align: "right"
crear_scatterplot(data, "Adelia", "Torgersen")
```
:::

## M칰ltiples figuras {.mult-figs}

<br>

- La visualizaci칩n de varios gr치ficos uno al lado del otro es un requisito frecuente para un informe limpio de Quarto. Por defecto, los gr치ficos generados dentro de un 칰nico fragmento de c칩digo se muestran uno tras otro verticalmente, consumiendo un espacio considerable en la p치gina.

- Quarto incluye amplias funciones para personalizar la disposici칩n de las figuras. Una de las opciones m치s sencillas es la funci칩n `layout-ncol`. Permite especificar el n칰mero de columnas en las que deben mostrarse los gr치ficos.

- Una ventaja a침adida de este enfoque es su capacidad de respuesta. Cuando se visualizan en pantallas m치s estrechas, los gr치ficos se apilan verticalmente de forma autom치tica, lo que garantiza su claridad y legibilidad.

## Quarto aplana la curva de aprendizaje {.takeaway .center}

![](images/3-teach/many-qmd-to-output.png){width="70%" fig-alt="A schematic showing many qmd files, going through Quarto, to generate an HTML, PDF, or Word document or more. The Quarto logo is depicted as a baseball a penguin is spinning." fig-align="center"}

::: notes
So, in regards to teaching, I've talked about a much less steep hill students need to climb as their projects grow.
I've also said this was a pleasant surprise as it was not something I had thought about when I started teaching with Quarto.
But, in hindsight, this was no coincidence.
Quarto's features like consistent citation syntax, more intentional control over when computations should run or rerun, and a single, minimal yaml that controls inputs, layouts, theming, etc. all contribute to flattening this learning curve.
:::

## Quarto puede crecer con sus usuarios de una manera profunda {.takeaway .center}

<br>

::: {.fragment .fade-up}
![](images/3-teach/many-lang-qmd-to-output.png){fig-alt="A schematic showing many computing languages (R, Python, Julia, Observable, and more) going into many single qmd files, going through Quarto, to generate an HTML, PDF, or Word document or more. The Quarto logo is depicted as a baseball a penguin is spinning." fig-align="center"}
:::

::: notes
And beyond learners growing and expanding the scope of their work easily with Quarto, Quarto can grow with them in a profound way as well.

--\> The fact that Quarto is language and authoring tool independent offers an opportunity for folks to take Quarto with them on their data science journey, wherever that journey takes them.
I mean..
I'm almost tempted to finally learn Python to see it in action in Quarto.
But who I know is learning Python, and Julia, and other languages are my students in their Computer Science courses.
To imagine that they could learn R in RStudio using Quarto in my course, and then continue to use Quarto in Jupyter in their CS courses...
That sounds like such a bright future to me!

**\[Pause\]** And a bright future includes things we can't even imagine yet.

**\[Mine continue on next slide\]**
:::
